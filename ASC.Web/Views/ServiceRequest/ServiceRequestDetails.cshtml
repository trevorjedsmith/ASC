@model ASC.Web.Models.ViewModels.ServiceRequestDetailViewModel
@using Microsoft.AspNetCore.Http
@using ASC.Web.Models.BaseTypes
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@inject IHttpContextAccessor UserHttpContext
@{
  Layout = "_SecureLayout";
}

<style>
  .padding-10px{
    padding: 10px;
  }
  .font-size-12px{
    font-size : 12px;
  }
  .padding-top-10px{
    padding-top: 10px !important;
  }
  .padding-left-50px{
    padding-left: 50px;
  }
</style>

@{
  //Compute Service Engineer and Status
  string serviceEngineerDisabled = null;

  if (!UserHttpContext.HttpContext.User.IsInRole(Roles.Admin.ToString()))
  {
    serviceEngineerDisabled = "disabled";
  }

  string statusDisabled = null;

  if (!UserHttpContext.HttpContext.User.IsInRole(Roles.Admin.ToString()) && !UserHttpContext.HttpContext.User.IsInRole(Roles.Engineer.ToString()))
  {
    statusDisabled = "disabled";
  }

  // Customer can update the status only if the original status is Customer pending approval.
  if (UserHttpContext.HttpContext.User.IsInRole(Roles.User.ToString()) && Model.ServiceRequest.Status == Status.PendingCustomerApproval.ToString())
  {
    statusDisabled = null;
    ViewBag.Status = new List<string> {"Completed", "RequestForInformation"};
  }
}

<div class="row"></div>
<div class="row padding-top-20px">
@* Details Section *@
<div class="row z-depth-3">
  <div class="col s12 padding-0px">
    <div class="section white-text padding-left-10px blue-grey lighten-1">
      <h5>Service Request Details</h5>
    </div>
    <div class="divider"></div>
    <form asp-controller="ServiceRequest" asp-action="UpdateServiceRequestDetails" method="post" class="col s12">
      <input type="hidden" asp-for="ServiceRequest.Id" />
      <input type="hidden" asp-for="ServiceRequest.RequestedDate" />
      <div class="row">
        <div class="input-field col s4">
          <select asp-for="ServiceRequest.VehicleName"
                  asp-items="@(new SelectList(ViewBag.VehicleNames,"Id","Name"))"
                  class="" required="required" disabled>
            <option value="">Please select one</option>
          </select>
          <label asp-for="ServiceRequest.VehicleName"></label>
        </div>
        <div class="input-field col s4">
          <select asp-for="ServiceRequest.VehicleType"
                  asp-items="@(new SelectList(ViewBag.VehicleTypes,"Id","Name"))"
                  class="validate" required="required" disabled>
            <option value="">Please select one</option>
          </select>
          <label asp-for="ServiceRequest.VehicleType"></label>
        </div>
        <div class="input-field col s4">
          <input asp-for="ServiceRequest.RequestedDate" type="text"
                 disabled="disabled" class="datepicker"/>
          <label asp-for="ServiceRequest.RequestedDate"></label>
        </div>
      </div>
      <div class="row">
        <div class="input-field col s8">
          <textarea asp-for="ServiceRequest.RequestedServices"
                     class="materialize-textarea validate"></textarea>
          <label asp-for="ServiceRequest.RequestedServices"></label>
        </div>
      </div>
      <div class="row">
        <div class="input-field col s4">
          <select asp-for="ServiceRequest.ServiceEngineer"
                  asp-items="@(new SelectList(ViewBag.ServiceEngineers,
                                 "Email", "Email"))" class="" required="required" disabled=@serviceEngineerDisabled>
            <option value="">Please select one</option>
          </select>
          <label asp-for="ServiceRequest.ServiceEngineer"></label>
        </div>
        <div class="input-field col s4">
          <select asp-for="ServiceRequest.Status"
                  asp-items="@(new SelectList(ViewBag.Status))"
                  class="validate" required="required"
                  disabled=@statusDisabled>
            <option value="">Please select one</option>
          </select>
          <label asp-for="ServiceRequest.Status"></label>
        </div>
        <div class="input-field col s12 right-align">
          <button class="btn waves-effect waves-light btnSubmit" type="submit"
                  name="action">
            Update
            <i class="material-icons right">send</i>
          </button>
        </div>
        <div class="row col s12 right-align" asp-validation-summary="All"></div>
      </div>
    </form>
  </div>
  <div class="row">
    @* Messages Section *@
    <input type="hidden" id="hdnCustomerEmail" value="@Model.ServiceRequest.Id" />
    <div class="row">
      <div class="col s6">
        <ul class="collection with-header">
          <li class="collection-header"><h5>Service Request Messages</h5></li>
          <li class="collection-item height-300px overflow-y messages">
            <ul id="messagesList"></ul>
            <div class="card-panel teal lighten-2 white-text noMessages hide">No
              Messages.</div>
          </li>
        </ul>
        <div class="input-field col s12">
          <input type="text" id="txtMessage" />
          <label for="txtMessage">Type message here and press enter.</label>
        </div>
      </div>
    </div>
  </div>
</div>

@section Scripts{ 
  
  <script src="http://ajax.aspnetcdn.com/ajax/signalr/jquery.signalr-2.2.0.min.js"></script>
  <script src="/signalr/hubs"></script>

  <script>

    @* Start the client side HUB *@
    $.connection.hub.start();


    // Initialize DatePicker
    $('.datepicker').pickadate({
      selectMonths: true,
      selectYears: 15
    });

    // initialize Material Select
    $('select').material_select();
    $("select[required]").css({
      display: "block",
      position: 'absolute',
      visibility: 'hidden'
    });


    @* Need to pass Verification Token to get Request Validated for Forgery *@
    var token = $('input[type=hidden][name=__RequestVerificationToken]', document).val();
    console.log(token);

    $.ajaxSetup({
      //Disable ajax responses
      cache: false,
      headers: { 'RequestVerificationToken': token, 'ServiceRequestId': $('#ServiceRequest_Id').val() }
    });

    @* Get all previous messages for the service request *@
    $.get('/ServiceRequest/ServiceRequestMessage?serviceRequestId=' + $('#ServiceRequest_Id').val(),
      function(data,
        status) {
        console.log(data);
        addMessagesToList(data);
      });

    @* Function to scroll the messages panel to latest message *@
    function scrollToLatestMessages() {
      $('.messages').animate({ scrollTop: 10000 }, 'normal');
    };

    @* Function which is used to list of messages to UI *@
    function addMessagesToList(messages) {

      if (messages.length === 0) {
        $('.noMessages').removeClass('hide');
      }

      $.each(messages,
        function(index) {
          var message = messages[index];
          displayMessage(message);
        });

      scrollToLatestMessages();
    }

    @* Function AddMessage *@
    function addMessage(message) {
      if (message.ServiceRequestId !== $('#ServiceRequest_Id').val()) {
        console.log('Not Equal');
        return;
      }

      if (message !== null) {
        $('.noMessages').addClass('hide');
      }
      displayMessage(message);
      scrollToLatestMessages();
    }

    function displayMessage(message) {

      var fromEmail = message.FromEmail || message.fromEmail;

      var isCustomer = $('#hdnCustomerEmail').val() === fromEmail ? 'blue lighten-1' : 'teal lighten-2';

      var displayName = message.fromDisplayName || message.FromDisplayName;
      var messageDate = message.messageDate || message.MessageDate;
        new Date(message.MessageDate).toLocaleString();
      var messageM = message.message || message.Message;

      $('#messagesList').append(
        '<li class="card-panel ' +
        isCustomer +
        ' white-text padding-10px">' +
        '<div class="col s12 padding-0px">' +
        '<div class="col s8 padding-0px"><b>' +
        displayName +
        '</b></div>' +
        '<div class="col s4 padding-0px font-size-12px right-align">' +
        (new Date(messageDate)).toLocaleString() +
        '</div>' +
        '</div><br>' +
        messageM +
        '</li>');
    }
    @* Get the proxy of SignalR Hub and associate client side function. *@
    $.connection.serviceMessagesHub.client.publishMessage = addMessage;

    @* Function used to post message to server on keypress *@
    $('#txtMessage').keypress(function(e) {
      var key = e.which;
      if (key == 13) {
        var message = new Object();
        message.Message = $('#txtMessage').val();
        message.ServiceRequestId = $('#ServiceRequest_Id').val();

        $.post('/ServiceRequest/CreateServiceRequestMessage',
          { message: message },
          function(data, status, xhr) {
            if (data) {
              $('.noMessages').addClass('hide');
              $('#txtMessage').val('');
            }
          });
        scrollToLatestMessages();
      }
    });
  </script>
}